output prefix: /Users/Sei/SFU/CMPT379/DecafCompiler/decafexpr/output/dev/llvm/boolconst-var
llvmas: /usr/local/Cellar/llvm38/3.8.0/lib/llvm-3.8/bin/llvm-as
llc: /usr/local/Cellar/llvm38/3.8.0/lib/llvm-3.8/bin/llc
cc: gcc
codegen: /Users/Sei/SFU/CMPT379/DecafCompiler/decafexpr/answer/decafexpr
stdlib: /Users/Sei/SFU/CMPT379/DecafCompiler/decafexpr/answer/decaf-stdlib.c
generating llvm code:/Users/Sei/SFU/CMPT379/DecafCompiler/decafexpr/answer/decafexpr ... ok
; ModuleID = 'Test'

declare void @print_int(i32)

define i32 @main() {
entry:
  %b = alloca i1
  store i1 true, i1* %b
  %b1 = load i1, i1* %b
  %zexttmp = zext i1 %b1 to i32
  call void @print_int(i32 %zexttmp)
  store i1 false, i1* %b
  %b2 = load i1, i1* %b
  %zexttmp3 = zext i1 %b2 to i32
  call void @print_int(i32 %zexttmp3)
  ret i32 0
}
assembling to bitcode:/usr/local/Cellar/llvm38/3.8.0/lib/llvm-3.8/bin/llvm-as "/Users/Sei/SFU/CMPT379/DecafCompiler/decafexpr/output/dev/llvm/boolconst-var.llvm" -o "/Users/Sei/SFU/CMPT379/DecafCompiler/decafexpr/output/dev/llvm/boolconst-var.llvm.bc" ... ok
converting to native code:/usr/local/Cellar/llvm38/3.8.0/lib/llvm-3.8/bin/llc "/Users/Sei/SFU/CMPT379/DecafCompiler/decafexpr/output/dev/llvm/boolconst-var.llvm.bc" -o "/Users/Sei/SFU/CMPT379/DecafCompiler/decafexpr/output/dev/llvm/boolconst-var.llvm.s" ... ok
linking:gcc -o "/Users/Sei/SFU/CMPT379/DecafCompiler/decafexpr/output/dev/llvm/boolconst-var.llvm.exec" "/Users/Sei/SFU/CMPT379/DecafCompiler/decafexpr/output/dev/llvm/boolconst-var.llvm.s" "/Users/Sei/SFU/CMPT379/DecafCompiler/decafexpr/answer/decaf-stdlib.c" ... ok
running:/Users/Sei/SFU/CMPT379/DecafCompiler/decafexpr/output/dev/llvm/boolconst-var.llvm.exec ... ok
