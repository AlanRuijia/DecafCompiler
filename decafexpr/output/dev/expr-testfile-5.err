output prefix: /Users/Jerry/Develop/SFU/compiler/DecafCompiler/decafexpr/output/dev/llvm/expr-testfile-5
llvmas: /usr/local/Cellar/llvm38/3.8.0/lib/llvm-3.8/bin/llvm-as
llc: /usr/local/Cellar/llvm38/3.8.0/lib/llvm-3.8/bin/llc
cc: gcc
codegen: /Users/Jerry/Develop/SFU/compiler/DecafCompiler/decafexpr/answer/decafexpr
stdlib: /Users/Jerry/Develop/SFU/compiler/DecafCompiler/decafexpr/answer/decaf-stdlib.c
generating llvm code:/Users/Jerry/Develop/SFU/compiler/DecafCompiler/decafexpr/answer/decafexpr ... ok
; ModuleID = 'Test'

declare void @print_int(i32)

define i32 @main() {
entry:
  %x = alloca i1
  %y = alloca i1
  %z = alloca i1
  store i1 true, i1* %x
  store i1 true, i1* %y
  %x1 = load i1, i1* %x
  %y2 = load i1, i1* %y
  %AndTmp = and i1 %x1, %y2
  store i1 %AndTmp, i1* %z
  %z3 = load i1, i1* %z
  %zexttmp = zext i1 %z3 to i32
  call void @print_int(i32 %zexttmp)
  ret i32 0
}
assembling to bitcode:/usr/local/Cellar/llvm38/3.8.0/lib/llvm-3.8/bin/llvm-as "/Users/Jerry/Develop/SFU/compiler/DecafCompiler/decafexpr/output/dev/llvm/expr-testfile-5.llvm" -o "/Users/Jerry/Develop/SFU/compiler/DecafCompiler/decafexpr/output/dev/llvm/expr-testfile-5.llvm.bc" ... ok
converting to native code:/usr/local/Cellar/llvm38/3.8.0/lib/llvm-3.8/bin/llc "/Users/Jerry/Develop/SFU/compiler/DecafCompiler/decafexpr/output/dev/llvm/expr-testfile-5.llvm.bc" -o "/Users/Jerry/Develop/SFU/compiler/DecafCompiler/decafexpr/output/dev/llvm/expr-testfile-5.llvm.s" ... ok
linking:gcc -o "/Users/Jerry/Develop/SFU/compiler/DecafCompiler/decafexpr/output/dev/llvm/expr-testfile-5.llvm.exec" "/Users/Jerry/Develop/SFU/compiler/DecafCompiler/decafexpr/output/dev/llvm/expr-testfile-5.llvm.s" "/Users/Jerry/Develop/SFU/compiler/DecafCompiler/decafexpr/answer/decaf-stdlib.c" ... ok
ld: warning: object file (/var/folders/6l/4w793k193_z5lr9j_yrnfp1r0000gn/T/expr-testfile-5-7b878b.o) was built for newer OSX version (10.12) than being linked (10.11)
running:/Users/Jerry/Develop/SFU/compiler/DecafCompiler/decafexpr/output/dev/llvm/expr-testfile-5.llvm.exec ... ok
