; ModuleID = 'C'

declare void @print_int(i32)

define void @f() {
entry:
  %i = alloca i32
  store i32 0, i32* %i
  br label %ForBegin

ForBegin:                                         ; preds = %entry
  store i32 0, i32* %i
  br label %ForCond

ForCond:                                          ; preds = %ForAfter, %ForBegin
  %i1 = load i32, i32* %i
  %LTTmp = icmp slt i32 %i1, 10
  %IfCond = icmp eq i1 %LTTmp, true
  br i1 %IfCond, label %ForExec, label %ForEnd

ForExec:                                          ; preds = %ForCond
  %i2 = load i32, i32* %i
  %EQTmp = icmp eq i32 %i2, 5
  %IfCond3 = icmp eq i1 %EQTmp, true
  br i1 %IfCond3, label %Then, label %Else

Then:                                             ; preds = %ForExec
  br label %ForAfter
  br label %IfCont

Else:                                             ; preds = %ForExec
  br label %IfCont

IfCont:                                           ; preds = %Else, %Then
  %i4 = load i32, i32* %i
  %EQTmp5 = icmp eq i32 %i4, 8
  %IfCond6 = icmp eq i1 %EQTmp5, true
  br i1 %IfCond6, label %Then7, label %Else8

Then7:                                            ; preds = %IfCont
  br label %ForEnd
  br label %IfCont9

Else8:                                            ; preds = %IfCont
  br label %IfCont9

IfCont9:                                          ; preds = %Else8, %Then7
  %i10 = load i32, i32* %i
  call void @print_int(i32 %i10)
  br label %ForAfter

ForAfter:                                         ; preds = %IfCont9, %Then
  %i11 = load i32, i32* %i
  %AddTmp = add i32 %i11, 1
  store i32 %AddTmp, i32* %i
  br label %ForCond

ForEnd:                                           ; preds = %Then7, %ForCond
  %i12 = load i32, i32* %i
  call void @print_int(i32 %i12)
  ret void
}

define void @main() {
entry:
  call void @f()
  ret void
}
