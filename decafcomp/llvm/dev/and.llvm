; ModuleID = 'Test'

declare void @print_int(i32)

define i32 @main() {
entry:
  %x = alloca i32
  store i32 0, i32* %x
  br i1 true, label %True, label %False

True:                                             ; preds = %entry
  br label %BooleanShortCircuit

False:                                            ; preds = %entry
  br label %BooleanShortCircuit

BooleanShortCircuit:                              ; preds = %False, %True
  %phival = phi i1 [ true, %True ], [ false, %False ]
  %zexttmp = zext i1 %phival to i32
  call void @print_int(i32 %zexttmp)
  br i1 true, label %True1, label %False2

True1:                                            ; preds = %BooleanShortCircuit
  br label %BooleanShortCircuit3

False2:                                           ; preds = %BooleanShortCircuit
  br label %BooleanShortCircuit3

BooleanShortCircuit3:                             ; preds = %False2, %True1
  %phival4 = phi i1 [ false, %True1 ], [ false, %False2 ]
  %zexttmp5 = zext i1 %phival4 to i32
  call void @print_int(i32 %zexttmp5)
  br i1 false, label %True6, label %False7

True6:                                            ; preds = %BooleanShortCircuit3
  br label %BooleanShortCircuit8

False7:                                           ; preds = %BooleanShortCircuit3
  br label %BooleanShortCircuit8

BooleanShortCircuit8:                             ; preds = %False7, %True6
  %phival9 = phi i1 [ true, %True6 ], [ false, %False7 ]
  %zexttmp10 = zext i1 %phival9 to i32
  call void @print_int(i32 %zexttmp10)
  br i1 false, label %True11, label %False12

True11:                                           ; preds = %BooleanShortCircuit8
  br label %BooleanShortCircuit13

False12:                                          ; preds = %BooleanShortCircuit8
  br label %BooleanShortCircuit13

BooleanShortCircuit13:                            ; preds = %False12, %True11
  %phival14 = phi i1 [ false, %True11 ], [ false, %False12 ]
  %zexttmp15 = zext i1 %phival14 to i32
  call void @print_int(i32 %zexttmp15)
  ret i32 0
}
