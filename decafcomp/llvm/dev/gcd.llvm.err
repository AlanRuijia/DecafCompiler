; ModuleID = 'GreatestCommonDivisor'

declare void @print_int(i32)

define i32 @main() {
entry:
  %x = alloca i32
  store i32 0, i32* %x
  %y = alloca i32
  store i32 0, i32* %y
  %z = alloca i32
  store i32 0, i32* %z
  %a = load i32, i32* %a
  store i32 %a, i32* %x
  %b = load i32, i32* %b
  store i32 %b, i32* %y
  %x1 = load i32, i32* %x
  %y2 = load i32, i32* %y
  %calltmp = call i32 @gcd(i32 %x1, i32 %y2)
  store i32 %calltmp, i32* %z
  %z3 = load i32, i32* %z
  call void @print_int(i32 %z3)
  ret i32 0
}

define i32 @gcd(i32, i32) {
entry:
  %a = alloca i32
  %b = alloca i32
  store i32 %0, i32* %a
  store i32 %1, i32* %b
  %b1 = load i32, i32* %b
  %EQTmp = icmp eq i32 %b1, 0
  %IfCond = icmp eq i1 %EQTmp, true
  br i1 %IfCond, label %Then, label %Else

Then:                                             ; preds = %entry
  %a2 = load i32, i32* %a
  ret i32 %a2
  br label %IfCont

Else:                                             ; preds = %entry
  %b3 = load i32, i32* %b
  %a4 = load i32, i32* %a
  %b5 = load i32, i32* %b
  %RemainTmp = srem i32 %a4, %b5
  %calltmp = call i32 @gcd(i32 %b3, i32 %RemainTmp)
  ret i32 %calltmp
  br label %IfCont

IfCont:                                           ; preds = %Else, %Then
  ret i32 0
}
