; ModuleID = 'Test'

declare void @print_int(i32)

define i32 @main() {
entry:
  %x = alloca i32
  store i32 0, i32* %x
  %y = alloca i1
  store i1 false, i1* %y
  %z = alloca i1
  store i1 false, i1* %z
  store i32 958, i32* %x
  %x1 = load i32, i32* %x
  %NegTmp = sub i32 0, %x1
  store i32 %NegTmp, i32* %x
  store i1 true, i1* %y
  store i1 false, i1* %z
  br i1 true, label %True, label %False

True:                                             ; preds = %entry
  %y2 = load i1, i1* %y
  br label %BooleanShortCircuit

False:                                            ; preds = %entry
  br label %BooleanShortCircuit

BooleanShortCircuit:                              ; preds = %False, %True
  %phival = phi i1 [ %y2, %True ], [ false, %False ]
  %LHS = icmp eq i1 %phival, true
  %LHS3 = icmp eq i1 %phival, true
  br i1 %LHS3, label %True4, label %False5

True4:                                            ; preds = %BooleanShortCircuit
  br label %BooleanShortCircuit7

False5:                                           ; preds = %BooleanShortCircuit
  %z6 = load i1, i1* %z
  br label %BooleanShortCircuit7

BooleanShortCircuit7:                             ; preds = %False5, %True4
  %phival8 = phi i1 [ true, %True4 ], [ %z6, %False5 ]
  store i1 %phival8, i1* %y
  %x9 = load i32, i32* %x
  %NegTmp10 = sub i32 0, %x9
  call void @print_int(i32 %NegTmp10)
  ret i32 0
}
