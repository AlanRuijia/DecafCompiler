; ModuleID = 'pro'

@a = global [10 x i32] zeroinitializer

declare void @print_int(i32)

declare i32 @read_int()

define i32 @partition(i32, i32) {
entry:
  %h = alloca i32
  %t = alloca i32
  store i32 %0, i32* %h
  store i32 %1, i32* %t
  %p = alloca i32
  store i32 0, i32* %p
  %h1 = load i32, i32* %h
  %arrayindex = getelementptr i32, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @a, i32 0, i32 0), i32 %h1
  %loadtmp = load i32, i32* %arrayindex
  store i32 %loadtmp, i32* %p
  br label %WhileCond

WhileCond:                                        ; preds = %IfCont59, %entry
  %h2 = load i32, i32* %h
  %t3 = load i32, i32* %t
  %LTTmp = icmp slt i32 %h2, %t3
  %IfCond = icmp eq i1 %LTTmp, true
  br i1 %IfCond, label %While, label %WhileEnd60

While:                                            ; preds = %WhileCond
  br label %WhileCond4

WhileCond4:                                       ; preds = %While14, %While
  %h5 = load i32, i32* %h
  %t6 = load i32, i32* %t
  %LTTmp7 = icmp slt i32 %h5, %t6
  %LHS = icmp eq i1 %LTTmp7, true
  %LHS8 = icmp eq i1 %LTTmp7, true
  br i1 %LHS8, label %True, label %False

True:                                             ; preds = %WhileCond4
  %p9 = load i32, i32* %p
  %t10 = load i32, i32* %t
  %arrayindex11 = getelementptr i32, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @a, i32 0, i32 0), i32 %t10
  %loadtmp12 = load i32, i32* %arrayindex11
  %LEQTmp = icmp sle i32 %p9, %loadtmp12
  br label %BooleanShortCircuit

False:                                            ; preds = %WhileCond4
  br label %BooleanShortCircuit

BooleanShortCircuit:                              ; preds = %False, %True
  %phival = phi i1 [ %LEQTmp, %True ], [ false, %False ]
  %IfCond13 = icmp eq i1 %phival, true
  br i1 %IfCond13, label %While14, label %WhileEnd

While14:                                          ; preds = %BooleanShortCircuit
  %t15 = load i32, i32* %t
  %SubTmp = sub i32 %t15, 1
  store i32 %SubTmp, i32* %t
  br label %WhileCond4

WhileEnd:                                         ; preds = %BooleanShortCircuit
  %h16 = load i32, i32* %h
  %t17 = load i32, i32* %t
  %LTTmp18 = icmp slt i32 %h16, %t17
  %IfCond19 = icmp eq i1 %LTTmp18, true
  br i1 %IfCond19, label %Then, label %Else

Then:                                             ; preds = %WhileEnd
  %h20 = load i32, i32* %h
  %arrayindex21 = getelementptr i32, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @a, i32 0, i32 0), i32 %h20
  %t22 = load i32, i32* %t
  %arrayindex23 = getelementptr i32, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @a, i32 0, i32 0), i32 %t22
  %loadtmp24 = load i32, i32* %arrayindex23
  store i32 %loadtmp24, i32* %arrayindex21
  %h25 = load i32, i32* %h
  %AddTmp = add i32 %h25, 1
  store i32 %AddTmp, i32* %h
  br label %IfCont

Else:                                             ; preds = %WhileEnd
  br label %IfCont

IfCont:                                           ; preds = %Else, %Then
  br label %WhileCond26

WhileCond26:                                      ; preds = %While42, %IfCont
  %h27 = load i32, i32* %h
  %t28 = load i32, i32* %t
  %LTTmp29 = icmp slt i32 %h27, %t28
  %LHS30 = icmp eq i1 %LTTmp29, true
  %LHS31 = icmp eq i1 %LTTmp29, true
  br i1 %LHS31, label %True32, label %False38

True32:                                           ; preds = %WhileCond26
  %h33 = load i32, i32* %h
  %arrayindex34 = getelementptr i32, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @a, i32 0, i32 0), i32 %h33
  %loadtmp35 = load i32, i32* %arrayindex34
  %p36 = load i32, i32* %p
  %LEQTmp37 = icmp sle i32 %loadtmp35, %p36
  br label %BooleanShortCircuit39

False38:                                          ; preds = %WhileCond26
  br label %BooleanShortCircuit39

BooleanShortCircuit39:                            ; preds = %False38, %True32
  %phival40 = phi i1 [ %LEQTmp37, %True32 ], [ false, %False38 ]
  %IfCond41 = icmp eq i1 %phival40, true
  br i1 %IfCond41, label %While42, label %WhileEnd45

While42:                                          ; preds = %BooleanShortCircuit39
  %h43 = load i32, i32* %h
  %AddTmp44 = add i32 %h43, 1
  store i32 %AddTmp44, i32* %h
  br label %WhileCond26

WhileEnd45:                                       ; preds = %BooleanShortCircuit39
  %h46 = load i32, i32* %h
  %t47 = load i32, i32* %t
  %LTTmp48 = icmp slt i32 %h46, %t47
  %IfCond49 = icmp eq i1 %LTTmp48, true
  br i1 %IfCond49, label %Then50, label %Else58

Then50:                                           ; preds = %WhileEnd45
  %t51 = load i32, i32* %t
  %arrayindex52 = getelementptr i32, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @a, i32 0, i32 0), i32 %t51
  %h53 = load i32, i32* %h
  %arrayindex54 = getelementptr i32, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @a, i32 0, i32 0), i32 %h53
  %loadtmp55 = load i32, i32* %arrayindex54
  store i32 %loadtmp55, i32* %arrayindex52
  %t56 = load i32, i32* %t
  %SubTmp57 = sub i32 %t56, 1
  store i32 %SubTmp57, i32* %t
  br label %IfCont59

Else58:                                           ; preds = %WhileEnd45
  br label %IfCont59

IfCont59:                                         ; preds = %Else58, %Then50
  br label %WhileCond

WhileEnd60:                                       ; preds = %WhileCond
  %h61 = load i32, i32* %h
  %arrayindex62 = getelementptr i32, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @a, i32 0, i32 0), i32 %h61
  %p63 = load i32, i32* %p
  store i32 %p63, i32* %arrayindex62
  %h64 = load i32, i32* %h
  ret i32 %h64
  ret i32 0
}

define void @qsort(i32, i32, i32) {
entry:
  %h = alloca i32
  %t = alloca i32
  %n = alloca i32
  store i32 %0, i32* %h
  store i32 %1, i32* %t
  store i32 %2, i32* %n
  %p = alloca i32
  store i32 0, i32* %p
  %h1 = load i32, i32* %h
  %t2 = load i32, i32* %t
  %GEQTmp = icmp sge i32 %h1, %t2
  %IfCond = icmp eq i1 %GEQTmp, true
  br i1 %IfCond, label %Then, label %Else

Then:                                             ; preds = %entry
  ret void
  br label %IfCont

Else:                                             ; preds = %entry
  br label %IfCont

IfCont:                                           ; preds = %Else, %Then
  %h3 = load i32, i32* %h
  %t4 = load i32, i32* %t
  %calltmp = call i32 @partition(i32 %h3, i32 %t4)
  store i32 %calltmp, i32* %p
  %h5 = load i32, i32* %h
  %p6 = load i32, i32* %p
  %SubTmp = sub i32 %p6, 1
  %n7 = load i32, i32* %n
  call void @qsort(i32 %h5, i32 %SubTmp, i32 %n7)
  %p8 = load i32, i32* %p
  %AddTmp = add i32 %p8, 1
  %t9 = load i32, i32* %t
  %n10 = load i32, i32* %n
  call void @qsort(i32 %AddTmp, i32 %t9, i32 %n10)
  ret void
}

define i32 @main() {
entry:
  %n = alloca i32
  store i32 0, i32* %n
  %i = alloca i32
  store i32 0, i32* %i
  %calltmp = call i32 @read_int()
  store i32 %calltmp, i32* %n
  br label %ForBegin

ForBegin:                                         ; preds = %entry
  store i32 0, i32* %i
  br label %ForCond

ForCond:                                          ; preds = %ForAfter, %ForBegin
  %i1 = load i32, i32* %i
  %n2 = load i32, i32* %n
  %LTTmp = icmp slt i32 %i1, %n2
  %IfCond = icmp eq i1 %LTTmp, true
  br i1 %IfCond, label %ForExec, label %ForEnd

ForExec:                                          ; preds = %ForCond
  %i3 = load i32, i32* %i
  %arrayindex = getelementptr i32, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @a, i32 0, i32 0), i32 %i3
  %calltmp4 = call i32 @read_int()
  store i32 %calltmp4, i32* %arrayindex
  br label %ForAfter

ForAfter:                                         ; preds = %ForExec
  %i5 = load i32, i32* %i
  %AddTmp = add i32 %i5, 1
  store i32 %AddTmp, i32* %i
  br label %ForCond

ForEnd:                                           ; preds = %ForCond
  %n6 = load i32, i32* %n
  %SubTmp = sub i32 %n6, 1
  %n7 = load i32, i32* %n
  call void @qsort(i32 0, i32 %SubTmp, i32 %n7)
  br label %ForBegin8

ForBegin8:                                        ; preds = %ForEnd
  store i32 0, i32* %i
  br label %ForCond9

ForCond9:                                         ; preds = %ForAfter17, %ForBegin8
  %i10 = load i32, i32* %i
  %n11 = load i32, i32* %n
  %LTTmp12 = icmp slt i32 %i10, %n11
  %IfCond13 = icmp eq i1 %LTTmp12, true
  br i1 %IfCond13, label %ForExec14, label %ForEnd20

ForExec14:                                        ; preds = %ForCond9
  %i15 = load i32, i32* %i
  %arrayindex16 = getelementptr i32, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @a, i32 0, i32 0), i32 %i15
  %loadtmp = load i32, i32* %arrayindex16
  call void @print_int(i32 %loadtmp)
  br label %ForAfter17

ForAfter17:                                       ; preds = %ForExec14
  %i18 = load i32, i32* %i
  %AddTmp19 = add i32 %i18, 1
  store i32 %AddTmp19, i32* %i
  br label %ForCond9

ForEnd20:                                         ; preds = %ForCond9
  ret i32 0
  ret i32 0
}
