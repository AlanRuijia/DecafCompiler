; ModuleID = 'GreatestCommonDivisor'

declare void @print_int(i32)

declare i32 @read_int()

define i32 @main() {
entry:
  %calltmp = call i32 @read_int()
  %calltmp1 = call i32 @read_int()
  %calltmp2 = call i32 @gcd(i32 %calltmp, i32 %calltmp1)
  call void @print_int(i32 %calltmp2)
  ret i32 0
}

define i32 @gcd(i32, i32) {
entry:
  %a = alloca i32
  %b = alloca i32
  store i32 %0, i32* %a
  store i32 %1, i32* %b
  %b1 = load i32, i32* %b
  %EQTmp = icmp eq i32 %b1, 0
  %IfCond = icmp eq i1 %EQTmp, false
  br i1 %IfCond, label %Then, label %Else

Then:                                             ; preds = %entry
  %a2 = load i32, i32* %a
  ret i32 %a2
  br label %IfCont

Else:                                             ; preds = %entry
  %b3 = load i32, i32* %b
  %a4 = load i32, i32* %a
  %b5 = load i32, i32* %b
  %RemainTmp = srem i32 %a4, %b5
  %calltmp = call i32 @gcd(i32 %b3, i32 %RemainTmp)
  ret i32 %calltmp
  br label %IfCont

IfCont:                                           ; preds = %Else, %Then
  ret i32 0
}
