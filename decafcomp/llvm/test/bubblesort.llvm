; ModuleID = 'bubblesort'

@a = global [10 x i32] zeroinitializer

declare void @print_int(i32)

declare i32 @read_int()

define i32 @main() {
entry:
  %n = alloca i32
  store i32 0, i32* %n
  %i = alloca i32
  store i32 0, i32* %i
  %j = alloca i32
  store i32 0, i32* %j
  %calltmp = call i32 @read_int()
  store i32 %calltmp, i32* %n
  br label %ForBegin

ForBegin:                                         ; preds = %entry
  store i32 0, i32* %i
  br label %ForCond

ForCond:                                          ; preds = %ForAfter, %ForBegin
  %i1 = load i32, i32* %i
  %n2 = load i32, i32* %n
  %LTTmp = icmp slt i32 %i1, %n2
  %IfCond = icmp eq i1 %LTTmp, true
  br i1 %IfCond, label %ForExec, label %ForEnd

ForExec:                                          ; preds = %ForCond
  %i3 = load i32, i32* %i
  %arrayindex = getelementptr i32, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @a, i32 0, i32 0), i32 %i3
  %calltmp4 = call i32 @read_int()
  store i32 %calltmp4, i32* %arrayindex
  br label %ForAfter

ForAfter:                                         ; preds = %ForExec
  %i5 = load i32, i32* %i
  %AddTmp = add i32 %i5, 1
  store i32 %AddTmp, i32* %i
  br label %ForCond

ForEnd:                                           ; preds = %ForCond
  br label %ForBegin6

ForBegin6:                                        ; preds = %ForEnd
  store i32 0, i32* %i
  br label %ForCond7

ForCond7:                                         ; preds = %ForAfter59, %ForBegin6
  %i8 = load i32, i32* %i
  %n9 = load i32, i32* %n
  %SubTmp = sub i32 %n9, 1
  %LTTmp10 = icmp slt i32 %i8, %SubTmp
  %IfCond11 = icmp eq i1 %LTTmp10, true
  br i1 %IfCond11, label %ForExec12, label %ForEnd62

ForExec12:                                        ; preds = %ForCond7
  br label %ForBegin13

ForBegin13:                                       ; preds = %ForExec12
  %i14 = load i32, i32* %i
  %AddTmp15 = add i32 %i14, 1
  store i32 %AddTmp15, i32* %j
  br label %ForCond16

ForCond16:                                        ; preds = %ForAfter55, %ForBegin13
  %j17 = load i32, i32* %j
  %n18 = load i32, i32* %n
  %LTTmp19 = icmp slt i32 %j17, %n18
  %IfCond20 = icmp eq i1 %LTTmp19, true
  br i1 %IfCond20, label %ForExec21, label %ForEnd58

ForExec21:                                        ; preds = %ForCond16
  %i22 = load i32, i32* %i
  %arrayindex23 = getelementptr i32, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @a, i32 0, i32 0), i32 %i22
  %loadtmp = load i32, i32* %arrayindex23
  %j24 = load i32, i32* %j
  %arrayindex25 = getelementptr i32, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @a, i32 0, i32 0), i32 %j24
  %loadtmp26 = load i32, i32* %arrayindex25
  %GTTmp = icmp sgt i32 %loadtmp, %loadtmp26
  %IfCond27 = icmp eq i1 %GTTmp, true
  br i1 %IfCond27, label %Then, label %Else

Then:                                             ; preds = %ForExec21
  %i28 = load i32, i32* %i
  %arrayindex29 = getelementptr i32, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @a, i32 0, i32 0), i32 %i28
  %i30 = load i32, i32* %i
  %arrayindex31 = getelementptr i32, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @a, i32 0, i32 0), i32 %i30
  %loadtmp32 = load i32, i32* %arrayindex31
  %j33 = load i32, i32* %j
  %arrayindex34 = getelementptr i32, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @a, i32 0, i32 0), i32 %j33
  %loadtmp35 = load i32, i32* %arrayindex34
  %AddTmp36 = add i32 %loadtmp32, %loadtmp35
  store i32 %AddTmp36, i32* %arrayindex29
  %j37 = load i32, i32* %j
  %arrayindex38 = getelementptr i32, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @a, i32 0, i32 0), i32 %j37
  %i39 = load i32, i32* %i
  %arrayindex40 = getelementptr i32, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @a, i32 0, i32 0), i32 %i39
  %loadtmp41 = load i32, i32* %arrayindex40
  %j42 = load i32, i32* %j
  %arrayindex43 = getelementptr i32, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @a, i32 0, i32 0), i32 %j42
  %loadtmp44 = load i32, i32* %arrayindex43
  %SubTmp45 = sub i32 %loadtmp41, %loadtmp44
  store i32 %SubTmp45, i32* %arrayindex38
  %i46 = load i32, i32* %i
  %arrayindex47 = getelementptr i32, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @a, i32 0, i32 0), i32 %i46
  %i48 = load i32, i32* %i
  %arrayindex49 = getelementptr i32, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @a, i32 0, i32 0), i32 %i48
  %loadtmp50 = load i32, i32* %arrayindex49
  %j51 = load i32, i32* %j
  %arrayindex52 = getelementptr i32, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @a, i32 0, i32 0), i32 %j51
  %loadtmp53 = load i32, i32* %arrayindex52
  %SubTmp54 = sub i32 %loadtmp50, %loadtmp53
  store i32 %SubTmp54, i32* %arrayindex47
  br label %IfCont

Else:                                             ; preds = %ForExec21
  br label %IfCont

IfCont:                                           ; preds = %Else, %Then
  br label %ForAfter55

ForAfter55:                                       ; preds = %IfCont
  %j56 = load i32, i32* %j
  %AddTmp57 = add i32 %j56, 1
  store i32 %AddTmp57, i32* %j
  br label %ForCond16

ForEnd58:                                         ; preds = %ForCond16
  br label %ForAfter59

ForAfter59:                                       ; preds = %ForEnd58
  %i60 = load i32, i32* %i
  %AddTmp61 = add i32 %i60, 1
  store i32 %AddTmp61, i32* %i
  br label %ForCond7

ForEnd62:                                         ; preds = %ForCond7
  br label %ForBegin63

ForBegin63:                                       ; preds = %ForEnd62
  store i32 0, i32* %i
  br label %ForCond64

ForCond64:                                        ; preds = %ForAfter73, %ForBegin63
  %i65 = load i32, i32* %i
  %n66 = load i32, i32* %n
  %LTTmp67 = icmp slt i32 %i65, %n66
  %IfCond68 = icmp eq i1 %LTTmp67, true
  br i1 %IfCond68, label %ForExec69, label %ForEnd76

ForExec69:                                        ; preds = %ForCond64
  %i70 = load i32, i32* %i
  %arrayindex71 = getelementptr i32, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @a, i32 0, i32 0), i32 %i70
  %loadtmp72 = load i32, i32* %arrayindex71
  call void @print_int(i32 %loadtmp72)
  br label %ForAfter73

ForAfter73:                                       ; preds = %ForExec69
  %i74 = load i32, i32* %i
  %AddTmp75 = add i32 %i74, 1
  store i32 %AddTmp75, i32* %i
  br label %ForCond64

ForEnd76:                                         ; preds = %ForCond64
  ret i32 0
  ret i32 0
}
